// <auto-generated />
using System;
using Manager.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manager.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Equipos_ConstruccionProyecto_Construccion", b =>
                {
                    b.Property<int>("EquiposDeConstruccionId")
                        .HasColumnType("int");

                    b.Property<int>("ProyectosDeConstruccionId")
                        .HasColumnType("int");

                    b.HasKey("EquiposDeConstruccionId", "ProyectosDeConstruccionId");

                    b.HasIndex("ProyectosDeConstruccionId");

                    b.ToTable("Equipos_ConstruccionProyecto_Construccion");
                });

            modelBuilder.Entity("Manager.Share.Entities.Equipos_Construccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Especialidades")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ListaMiembros")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Equipo_Construccion");
                });

            modelBuilder.Entity("Manager.Share.Entities.Maquinaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("capacidad")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("disponibilidad")
                        .HasColumnType("bit");

                    b.Property<string>("estadoMantenimiento")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("maquinaria");
                });

            modelBuilder.Entity("Manager.Share.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("deliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("materialName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("materialStock")
                        .HasColumnType("int");

                    b.Property<string>("proveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("Manager.Share.Entities.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ManoObra")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Maquinaria")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Materiales")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("ProyectoDeConstruccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoDeConstruccionId")
                        .IsUnique();

                    b.ToTable("Presupuesto");
                });

            modelBuilder.Entity("Manager.Share.Entities.Proyecto_Construccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Proyectos_Construccion");
                });

            modelBuilder.Entity("Manager.Share.Entities.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateFinished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProyectoDeConstruccionId")
                        .HasColumnType("int");

                    b.Property<int?>("Proyecto_ConstruccionId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("taskName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Proyecto_ConstruccionId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("MaquinariaTarea", b =>
                {
                    b.Property<int>("MaquinariasId")
                        .HasColumnType("int");

                    b.Property<int>("TareasId")
                        .HasColumnType("int");

                    b.HasKey("MaquinariasId", "TareasId");

                    b.HasIndex("TareasId");

                    b.ToTable("MaquinariaTarea");
                });

            modelBuilder.Entity("MaterialTarea", b =>
                {
                    b.Property<int>("MaterialesId")
                        .HasColumnType("int");

                    b.Property<int>("tareasId")
                        .HasColumnType("int");

                    b.HasKey("MaterialesId", "tareasId");

                    b.HasIndex("tareasId");

                    b.ToTable("MaterialTarea");
                });

            modelBuilder.Entity("Equipos_ConstruccionProyecto_Construccion", b =>
                {
                    b.HasOne("Manager.Share.Entities.Equipos_Construccion", null)
                        .WithMany()
                        .HasForeignKey("EquiposDeConstruccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manager.Share.Entities.Proyecto_Construccion", null)
                        .WithMany()
                        .HasForeignKey("ProyectosDeConstruccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Manager.Share.Entities.Presupuesto", b =>
                {
                    b.HasOne("Manager.Share.Entities.Proyecto_Construccion", "Proyecto_Construccion")
                        .WithOne("Presupuesto")
                        .HasForeignKey("Manager.Share.Entities.Presupuesto", "ProyectoDeConstruccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto_Construccion");
                });

            modelBuilder.Entity("Manager.Share.Entities.Tarea", b =>
                {
                    b.HasOne("Manager.Share.Entities.Proyecto_Construccion", "Proyecto_Construccion")
                        .WithMany("Tareas")
                        .HasForeignKey("Proyecto_ConstruccionId");

                    b.Navigation("Proyecto_Construccion");
                });

            modelBuilder.Entity("MaquinariaTarea", b =>
                {
                    b.HasOne("Manager.Share.Entities.Maquinaria", null)
                        .WithMany()
                        .HasForeignKey("MaquinariasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manager.Share.Entities.Tarea", null)
                        .WithMany()
                        .HasForeignKey("TareasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaterialTarea", b =>
                {
                    b.HasOne("Manager.Share.Entities.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manager.Share.Entities.Tarea", null)
                        .WithMany()
                        .HasForeignKey("tareasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Manager.Share.Entities.Proyecto_Construccion", b =>
                {
                    b.Navigation("Presupuesto");

                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
